-----------------------------------SYS--------------------------------------------
/*
ALTER SESSION SET "_ORACLE_SCRIPT" = true;
CREATE TABLESPACE PROYECTO_FINAL_BD DATAFILE
'C:\ORACLE_FILES\PROYECTO_FINAL_BD.DBF' SIZE 75M ONLINE;

CREATE TEMPORARY TABLESPACE PROYECTO_FINAL_BD_TEMP TEMPFILE
'C:\ORACLE_FILES\PROYECTO_FINAL_BD_TEMP.DBF' SIZE 37M
AUTOEXTEND ON;

CREATE USER PROYECTO_BD IDENTIFIED BY root
default TABLESPACE PROYECTO_FINAL_BD;

GRANT RESOURCE TO PROYECTO_BD;
GRANT CONNECT TO PROYECTO_BD;
GRANT ALL PRIVILEGES TO PROYECTO_BD;
*/

--------------------------------Proyecto BD---------------------------------------

----------Activaciones

--ALTER TRIGGER nombre_del_trigger ENABLE;
--SET SERVEROUTPUT ON;

-----------Eliminar Tablas

DROP TABLE ADMINISTRADORES CASCADE CONSTRAINTS;
DROP TABLE CUOTAS_EXTRAORDINARIAS_FILIALES CASCADE CONSTRAINTS;
DROP TABLE CUOTAS_CONDOMINALES CASCADE CONSTRAINTS;
DROP TABLE CUOTAS_EXTRAORDINARIAS CASCADE CONSTRAINTS;
DROP TABLE ACCESOS CASCADE CONSTRAINTS;
DROP TABLE FILIALES CASCADE CONSTRAINTS;
DROP TABLE DUENOS CASCADE CONSTRAINTS;

----------Eliminar Sequencias

DROP SEQUENCE SQ_DUENOS;
DROP SEQUENCE SQ_FILIALES;
DROP SEQUENCE SQ_ACCESOS;
DROP SEQUENCE SQ_CUOTAS_CONDOMINALES;
DROP SEQUENCE SQ_CUOTAS_EXTRAORDINARIAS;

-----------Crear Tablas
CREATE TABLE ADMINISTRADORES(
    EMAIL VARCHAR2(30) PRIMARY KEY,
    NOMBRE VARCHAR2(50),
    CLAVE VARCHAR2(50)
);

CREATE TABLE DUENOS (
    ID_DUENO NUMBER(10) PRIMARY KEY,
    NOMBRE VARCHAR2(50) NOT NULL,
    PRIMER_APELLIDO VARCHAR2(50) NOT NULL,
    SEGUNDO_APELLIDO VARCHAR2(50) NOT NULL,
    TELEFONO VARCHAR2(20),
    EMAIL NVARCHAR2(100) UNIQUE,
    CLAVE VARCHAR2(50)
);

CREATE TABLE FILIALES (
    ID_FILIAL NUMBER(10) PRIMARY KEY,
    ID_DUENO NUMBER(10),
    FOREIGN KEY (ID_DUENO) REFERENCES DUENOS(ID_DUENO)
);

CREATE TABLE CUOTAS_CONDOMINALES (
    ID_CUOTA_CONDOMINAL NUMBER(20) PRIMARY KEY,
    ID_FILIAL NUMBER(10),
    MONTO FLOAT,
    FECHA DATE,
    FECHA_PAGO DATE,
    FOREIGN KEY (ID_FILIAL) REFERENCES FILIALES(ID_FILIAL)
);

CREATE TABLE CUOTAS_EXTRAORDINARIAS (
    ID_CUOTA_EXTRAORDINARIA NUMBER(20) PRIMARY KEY,
    DESCRIPCION VARCHAR2(100),
    MONTO FLOAT,
    FECHA DATE
);

CREATE TABLE CUOTAS_EXTRAORDINARIAS_FILIALES (
    ID_CUOTA_EXTRAORDINARIA NUMBER(20) NOT NULL,
    ID_FILIAL NUMBER(10),
    FECHA_PAGO DATE,
    FOREIGN KEY (ID_CUOTA_EXTRAORDINARIA) REFERENCES CUOTAS_EXTRAORDINARIAS(ID_CUOTA_EXTRAORDINARIA),
    FOREIGN KEY (ID_FILIAL) REFERENCES FILIALES(ID_FILIAL)
);

CREATE TABLE ACCESOS (
    ID_ACCESO NUMBER(20) PRIMARY KEY,
    ID_FILIAL NUMBER(10),
    CEDULA VARCHAR2(50),
    NOMBRE VARCHAR2(50),
    APELLIDOS VARCHAR2(50),
    TELEFONO VARCHAR2(20),
    EMAIL VARCHAR2(100),
    FECHA_ACCESO TIMESTAMP,
    FOREIGN KEY (ID_FILIAL) REFERENCES FILIALES(ID_FILIAL)
);

----------------Secuencias

CREATE SEQUENCE SQ_DUENOS
START WITH 1
INCREMENT BY 1
MINVALUE 1
MAXVALUE 9999999999
NOCACHE
NOCYCLE;

CREATE SEQUENCE SQ_FILIALES
START WITH 1
INCREMENT BY 1
MINVALUE 1
MAXVALUE 9999999999
NOCACHE
NOCYCLE;

CREATE SEQUENCE SQ_ACCESOS
START WITH 1
INCREMENT BY 1
MINVALUE 1
MAXVALUE 99999999999999999999
NOCACHE
NOCYCLE;

CREATE SEQUENCE SQ_CUOTAS_CONDOMINALES
START WITH 1
INCREMENT BY 1
MINVALUE 1
MAXVALUE 99999999999999999999
NOCACHE
NOCYCLE;

CREATE SEQUENCE SQ_CUOTAS_EXTRAORDINARIAS
START WITH 1
INCREMENT BY 1
MINVALUE 1
MAXVALUE 99999999999999999999
NOCACHE
NOCYCLE;


---------------Procedimientos Almacenados


CREATE OR REPLACE PROCEDURE SP_ADD_DUENO (
    p_nombre IN VARCHAR2,
    p_primer_apellido IN VARCHAR2,
    p_segundo_apellido IN VARCHAR2,
    p_telefono IN VARCHAR2,
    p_email IN NVARCHAR2,
    p_clave IN VARCHAR2
) AS
    v_id_dueno NUMBER; -- Cambiado a NUMBER para corresponder con la secuencia
BEGIN
    v_id_dueno := SQ_DUENOS.NEXTVAL;
    INSERT INTO DUENOS (ID_DUENO, NOMBRE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, TELEFONO, EMAIL, CLAVE)
    VALUES (v_id_dueno, p_nombre, p_primer_apellido, p_segundo_apellido, p_telefono, p_email, p_clave);
    DBMS_OUTPUT.PUT_LINE('Dueño añadido exitosamente con ID: ' || v_id_dueno);
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error al añadir dueño: ' || SQLERRM);
        ROLLBACK;
END SP_ADD_DUENO;
/

CREATE OR REPLACE PROCEDURE SP_UPDATE_FILIAL (
    p_id_filial IN NUMBER,
    p_id_dueno IN NUMBER
    )
AS
    v_id_filial NUMBER;
BEGIN
    UPDATE FILIALES
    SET ID_DUENO = p_id_dueno;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error al añadir filial: ' || SQLERRM);
        ROLLBACK;
END SP_UPDATE_FILIAL;
/

CREATE OR REPLACE PROCEDURE SP_ADD_CUOTA_EXTRAORDINARIA (
    p_descripcion IN VARCHAR2,
    p_monto IN FLOAT)
AS
    v_id_cuota_extraordinaria NUMBER;
BEGIN
    v_id_cuota_extraordinaria := SQ_CUOTAS_EXTRAORDINARIAS.NEXTVAL;
    INSERT INTO CUOTAS_EXTRAORDINARIAS (ID_CUOTA_EXTRAORDINARIA, DESCRIPCION, MONTO, FECHA)
    VALUES (v_id_cuota_extraordinaria, p_descripcion, p_monto, SYSDATE);
    COMMIT;
    DBMS_OUTPUT.PUT_LINE('Cuota extraordinaria añadida exitosamente con ID: ' || v_id_cuota_extraordinaria);
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error al añadir cuota extraordinaria: ' || SQLERRM);
        ROLLBACK;
END SP_ADD_CUOTA_EXTRAORDINARIA;
/

CREATE OR REPLACE PROCEDURE SP_ADD_FILIALES (
    p_num_rows IN NUMBER
) IS
BEGIN
    FOR i IN 1..p_num_rows LOOP
        INSERT INTO FILIALES (ID_FILIAL, ID_DUENO)
        VALUES (SQ_FILIALES.NEXTVAL, NULL);
    END LOOP;
    COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE SP_ADD_ACCESO (
    p_id_filial IN NUMBER,
    p_cedula IN VARCHAR2,
    p_nombre IN VARCHAR2,
    p_apellidos IN VARCHAR2,
    p_telefono IN VARCHAR2,
    p_email IN VARCHAR2
) AS
    v_id_acceso NUMBER;
BEGIN
    v_id_acceso := SQ_ACCESOS.NEXTVAL;
    INSERT INTO ACCESOS (ID_ACCESO, ID_FILIAL, CEDULA, NOMBRE, APELLIDOS, TELEFONO, EMAIL, FECHA_ACCESO)
    VALUES (v_id_acceso, p_id_filial, p_cedula, p_nombre, p_apellidos, p_telefono, p_email, SYSTIMESTAMP);
    DBMS_OUTPUT.PUT_LINE('Acceso añadido exitosamente con ID: ' || v_id_acceso);
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error al añadir acceso: ' || SQLERRM);
        ROLLBACK;
END SP_ADD_ACCESO;
/

CREATE OR REPLACE PROCEDURE SP_ADD_CUOTA_CONDOMINAL (
    P_MONTO IN FLOAT)
AS
    V_ID_CUOTA_CONDOMINAL NUMBER;
    V_ID_FILIAL NUMBER;
BEGIN
    FOR filial IN (SELECT ID_FILIAL FROM FILIALES WHERE ID_DUENO IS NOT NULL) LOOP
        V_ID_CUOTA_CONDOMINAL := SQ_CUOTAS_CONDOMINALES.NEXTVAL;
        V_ID_FILIAL := filial.ID_FILIAL;
        INSERT INTO CUOTAS_CONDOMINALES (ID_CUOTA_CONDOMINAL, ID_FILIAL, MONTO, FECHA, FECHA_PAGO)
        VALUES (V_ID_CUOTA_CONDOMINAL, V_ID_FILIAL, P_MONTO, SYSDATE, NULL);
    END LOOP;
    COMMIT;
    DBMS_OUTPUT.PUT_LINE('Cuota condominal añadida exitosamente.');
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error al añadir cuota condominal: ' || SQLERRM);
        ROLLBACK;
END SP_ADD_CUOTA_CONDOMINAL;
/

-----------------Triggers


CREATE OR REPLACE TRIGGER TR_ASIGNAR_CUOTAS_EXTRAORDINARIAS
AFTER INSERT ON CUOTAS_EXTRAORDINARIAS
FOR EACH ROW
DECLARE
    CURSOR C_FILIALES IS
        SELECT ID_FILIAL FROM FILIALES WHERE ID_DUENO IS NOT NULL;
    V_FILIAL NUMBER;
BEGIN
    OPEN C_FILIALES;
    LOOP
        FETCH C_FILIALES INTO V_FILIAL;
        EXIT WHEN C_FILIALES%NOTFOUND;
        INSERT INTO CUOTAS_EXTRAORDINARIAS_FILIALES (ID_CUOTA_EXTRAORDINARIA, ID_FILIAL, FECHA_PAGO)
        VALUES (:NEW.ID_CUOTA_EXTRAORDINARIA, V_FILIAL, NULL);
    END LOOP;
    CLOSE C_FILIALES;
END TR_ASIGNAR_CUOTAS_EXTRAORDINARIAS;
/

--------------------------------------------------
--Posibles tablas--
--tabla de historial de accesos
--tabla de historial de cuotas

/*
--Pruebas
INSERT INTO ADMINISTRADORES(EMAIL,NOMBRE,CLAVE) VALUES ('ypgonzales1910@gmail.com','Yulita','340772559fc7112b6e69f00696848c07');
INSERT INTO ADMINISTRADORES(EMAIL,NOMBRE,CLAVE) VALUES ('clavito@gmail.com','Clavito','77677d93999f74c717dc530167ab6992');
INSERT INTO ADMINISTRADORES(EMAIL,NOMBRE,CLAVE) VALUES ('admin@gmail.com','Admin','21232f297a57a5a743894a0e4a801fc3'); -- Clave = admin

EXECUTE SP_ADD_DUENO ('Cristopher','Gonzalez','Nunez', '81', 'c@gmail.com', 'cr');
EXECUTE SP_ADD_DUENO ('Yuli','Gonzalez','Chaves', '82', 'y@gmail.com', 'yu');
EXECUTE SP_ADD_DUENO ('Kristel','Duarte','Perez', '83', 'k@gmail.com', 'kr');
EXECUTE SP_ADD_DUENO ('Pablo','Alvarado','Umana', '84', 'p@gmail.com', 'pa');

EXECUTE SP_ADD_FILIALES (50);

*/
